# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements. See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License. You may obtain a copy of the License at
#     http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: sonarcloud

on:
  push:
    branches: [ master, main ]
  pull_request:
    types: [ opened, synchronize, reopened ]
  workflow_dispatch:

jobs:
  scan:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    permissions:
      contents: read
      pull-requests: read
    env:
      MAVEN_OPTS: "-Xmx2g"

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Cache Maven repository
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2-

      - name: Check SONAR_TOKEN
        shell: bash
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          if [ -z "${SONAR_TOKEN:-}" ]; then
            echo "::error::Missing SONAR_TOKEN secret (Settings → Security → Secrets and variables → Actions)"; exit 1; fi

      # Build + tests + JaCoCo (saltamos RAT para que no fallen licencias de archivos YAML)
      - name: Build & Test (skip RAT) + JaCoCo
        run: mvn -B -Denforcer.skip=true -Drat.skip=true -DskipITs clean verify jacoco:report

      - name: Ensure jacoco.xml exists
        shell: bash
        run: |
          if [ ! -f target/site/jacoco/jacoco.xml ]; then
            echo "jacoco.xml not found, retrying jacoco:report"
            mvn -B -Denforcer.skip=true -Drat.skip=true -DskipITs jacoco:report || true
          fi
          if [ ! -f target/site/jacoco/jacoco.xml ]; then
            echo "::error::jacoco.xml is missing. If this is a multi-module build, consider report-aggregate."
            ls -la target/site/jacoco || true
            exit 1
          fi

      # En PRs: Quality Gate obligatorio (si falla, falla el job)
      - name: SonarCloud (PRs, gate enforced)
        if: github.event_name == 'pull_request'
        run: |
          mvn -B org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
            -Dsonar.organization=stefanyrueda \
            -Dsonar.projectKey=StefanyRueda_commons-lang \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.sources=src/main/java,src/main/resources \
            -Dsonar.tests=src/test/java \
            -Dsonar.java.binaries=target/classes \
            -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml \
            -Dsonar.qualitygate.wait=true \
            -Dsonar.token=${{ secrets.SONAR_TOKEN }}

      # En push/dispatch: no bloquear el pipeline por el Gate (sigue publicando resultados en SonarCloud)
      - name: SonarCloud (push, non-blocking)
        if: github.event_name != 'pull_request'
        run: |
          mvn -B org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
            -Dsonar.organization=stefanyrueda \
            -Dsonar.projectKey=StefanyRueda_commons-lang \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.sources=src/main/java,src/main/resources \
            -Dsonar.tests=src/test/java \
            -Dsonar.java.binaries=target/classes \
            -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml \
            -Dsonar.qualitygate.wait=false \
            -Dsonar.token=${{ secrets.SONAR_TOKEN }}

      - name: Upload jacoco.xml artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-xml
          path: target/site/jacoco/jacoco.xml

      - name: Debug on failure
        if: failure()
        shell: bash
        run: |
          echo "target/site/jacoco:"; ls -la target/site/jacoco || true
