name: codacy-coverage

on:
  push:
    branches: [ "main", "master" ]
  pull_request:
  schedule:
    - cron: "0 6 * * 1"
  workflow_dispatch: {}

jobs:
  coverage:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      MAVEN_OPTS: "-Xmx2g"   # un poco más de memoria por si acaso

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      # Ejecuta tests SIN tu prepare-agent (JaCoCo lo inyecta el POM del proyecto)
      - name: Test
        run: |
          mvn -B -Denforcer.skip=true -Drat.skip=true -DskipITs test

      # Genera el XML con el plugin del proyecto
      - name: Generate JaCoCo XML
        run: |
          mvn -B -Denforcer.skip=true -Drat.skip=true jacoco:report

      # Subir cobertura a Codacy
      - name: Upload coverage to Codacy
        uses: codacy/codacy-coverage-reporter-action@v1
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: target/site/jacoco/jacoco.xml

      # Diagnóstico si algo falla: imprime los reportes de surefire
      - name: Dump surefire reports on failure
        if: failure()
        run: |
          echo "==== surefire-reports ===="
          ls -la target/surefire-reports || true
          for f in target/surefire-reports/*.txt; do
            echo "---- $f ----"; cat "$f"; echo; 
          done
          for f in target/surefire-reports/*.dump*; do
            echo "---- $f ----"; cat "$f"; echo; 
          done
