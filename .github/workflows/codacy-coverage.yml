name: codacy-coverage

on:
  push:
    branches: [ "main", "master" ]
  pull_request:
  schedule:
    - cron: "0 6 * * 1"   
  workflow_dispatch: {}    
jobs:
  coverage:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'   # 11 o 8 si tu proyecto lo requiere

      # 1) Inyecta el agente de JaCoCo y ejecuta tests
      - name: Test with JaCoCo agent
        run: |
          mvn -B -DskipITs org.jacoco:jacoco-maven-plugin:0.8.11:prepare-agent test

      # 2) Genera el reporte XML (target/site/jacoco/jacoco.xml)
      - name: Generate JaCoCo report
        run: |
          mvn -B org.jacoco:jacoco-maven-plugin:0.8.11:report

      # (Opcional) Verifica que el archivo exista para diagnosticar rápido
      - name: Check jacoco.xml exists
        run: |
          test -f target/site/jacoco/jacoco.xml || (echo "No se encontró target/site/jacoco/jacoco.xml" && exit 1)

      # 3) Sube cobertura a Codacy (usa tu secreto CODACY_PROJECT_TOKEN)
      - name: Upload coverage to Codacy
        uses: codacy/codacy-coverage-reporter-action@v1
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: target/site/jacoco/jacoco.xml

      # (Opcional) Guarda el reporte como artefacto, útil si algo falla
      - name: Upload jacoco.xml as artifact
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-xml
          path: target/site/jacoco/jacoco.xml
