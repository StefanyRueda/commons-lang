jobs:
  qlty:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions: { contents: read }
    env:
      QLTY_AUTH_TOKEN: ${{ secrets.QLTY_AUTH_TOKEN }}
      MAVEN_OPTS: "-Xmx2g"
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2-

      - name: Fail fast: tokens de Qlty
        env:
          QLTY_COVERAGE_TOKEN: ${{ secrets.QLTY_COVERAGE_TOKEN }}
        run: |
          [ -n "${QLTY_AUTH_TOKEN}" ] || { echo "❌ Falta QLTY_AUTH_TOKEN"; exit 1; }
          [ -n "${QLTY_COVERAGE_TOKEN}" ] || { echo "❌ Falta QLTY_COVERAGE_TOKEN"; exit 1; }

      - name: Test + JaCoCo (skip RAT)
        run: mvn -B -Denforcer.skip=true -Drat.skip=true -DskipITs clean test jacoco:report

      - name: Check jacoco.xml
        run: |
          if [ ! -f target/site/jacoco/jacoco.xml ]; then
            echo "⚠️ Reintentando jacoco:report..."
            mvn -B -Denforcer.skip=true -Drat.skip=true -DskipITs jacoco:report || true
          fi
          test -f target/site/jacoco/jacoco.xml || { ls -la target/site/jacoco || true; exit 1; }

      - name: Install Qlty CLI
        uses: qltysh/qlty-action/install@v2

      - name: qlty --version
        run: qlty --version

      - name: Ensure Qlty config (.qlty/qlty.toml)
        run: |
          [ -f .qlty/qlty.toml ] || { echo "init (tolerante)"; qlty init --yes || true; }

      - name: Validate Qlty config
        run: qlty config validate || true

      - name: Run Qlty analysis
        run: qlty metrics --all

      # ⬇️ Aquí usamos el token por flag (evita depender del entorno)
      - name: Publish coverage to Qlty
        run: qlty coverage publish target/site/jacoco/jacoco.xml --format jacoco --token "${{ secrets.QLTY_COVERAGE_TOKEN }}"

      - name: Subir jacoco.xml como artefacto
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-xml
          path: target/site/jacoco/jacoco.xml

      - name: Debug en caso de fallo
        if: failure()
        run: |
          echo "PATH=$PATH"
          which qlty || true
          ls -la .qlty || true
          ls -la target/site/jacoco || true
          if [ -d target/surefire-reports ]; then
            ls -la target/surefire-reports || true
            for f in target/surefire-reports/*; do
              echo "---- $f ----"; (head -n 200 "$f" || true); echo;
            done
          else
            echo "No existe target/surefire-reports"
          fi
