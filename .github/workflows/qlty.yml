name: qlty
on:
  push: { branches: [ "master", "main" ] }
  pull_request:
  schedule:
    - cron: "0 7 * * 1"
  workflow_dispatch: {}

jobs:
  qlty:
    runs-on: ubuntu-latest
    permissions: { contents: read }
    env:
      QLTY_AUTH_TOKEN: ${{ secrets.QLTY_AUTH_TOKEN }}
      MAVEN_OPTS: "-Xmx2g"
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      # Tests + cobertura (saltamos RAT de licencias)
      - name: Test + JaCoCo (skip RAT)
        run: mvn -B -Denforcer.skip=true -Drat.skip=true -DskipITs clean test jacoco:report

      # Instala Qlty CLI en $HOME/.qlty/bin y lo agrega al PATH
      - name: Install Qlty CLI
        run: |
          mkdir -p "$HOME/.qlty/bin"
          curl -fsSL https://get.qlty.sh | bash -s -- -b "$HOME/.qlty/bin"
          echo "$HOME/.qlty/bin" >> "$GITHUB_PATH"
          qlty --version

      # (Opcional) si quieres ver dónde quedó el binario
      - name: Check Qlty location
        run: which qlty

      # Análisis (smells / duplicación / complejidad)
      - name: Run Qlty analysis
        run: qlty metrics --all .

      # Publica cobertura JaCoCo en Qlty Cloud
      - name: Publish coverage to Qlty
        run: qlty coverage publish target/site/jacoco/jacoco.xml --format jacoco

      # Diagnóstico si algo falla
      - name: Debug paths on failure
        if: failure()
        run: |
          echo "PATH=$PATH"
          ls -la "$HOME/.qlty/bin" || true
          ls -la target/site/jacoco || true
